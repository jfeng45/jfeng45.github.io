<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding Style on Software Craftsman</title>
    <link>https://jfeng45.github.io/tags/coding-style/</link>
    <description>Recent content in Coding Style on Software Craftsman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jfeng45.github.io/tags/coding-style/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go Microservice with Clean Architecture: Coding Style</title>
      <link>https://jfeng45.github.io/posts/coding_style/</link>
      <pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jfeng45.github.io/posts/coding_style/</guid>
      <description>Coding style is a relatively boring topic in programming, but it is crucial to have an appropriate coding style to be an effective programmer. There are three components in it:
 Application layout and folder structure
 Coding rules or style
 Naming convention
  I already talked about application layout in “Go Microservice with Clean Architecture: Application Layout”¹ , so this article covers the rest.
Coding rules or style  No package level variables.</description>
    </item>
    
  </channel>
</rss>